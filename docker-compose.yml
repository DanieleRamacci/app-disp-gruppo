services:
  app:
    image: ghcr.io/danieleramacci/app-disp-gruppo:latest
    container_name: app-disp-gruppo
    # Se il server è ARM e l’immagine è solo amd64, abilita:
    # platform: "linux/amd64"
    labels:
      - traefik.enable=true

      # Router HTTP (solo redirect → HTTPS)
      - traefik.http.routers.app.rule=Host(`${APP_DOMAIN}`)
      - traefik.http.routers.app.entrypoints=web
      - traefik.http.middlewares.app-https-redirect.redirectscheme.scheme=https
      - traefik.http.routers.app.middlewares=app-https-redirect

      # Router HTTPS
      - traefik.http.routers.app-secure.rule=Host(`${APP_DOMAIN}`)
      - traefik.http.routers.app-secure.entrypoints=websecure
      - traefik.http.routers.app-secure.tls.certresolver=myresolver

      # Servizio interno: l'app ascolta su 5001
      - traefik.http.services.app.loadbalancer.server.port=5001

      # (opzionali) security headers base
      - traefik.http.middlewares.sec-headers.headers.stsSeconds=31536000
      - traefik.http.middlewares.sec-headers.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.sec-headers.headers.stsPreload=true
      - traefik.http.middlewares.sec-headers.headers.browserXssFilter=true
      - traefik.http.middlewares.sec-headers.headers.contentTypeNosniff=true
      - traefik.http.routers.app-secure.middlewares=sec-headers

    volumes:
      - app_data:/app/data
    networks:
      - gruppo_proxy
    pull_policy: always
    restart: unless-stopped

networks:
  gruppo_proxy:
    name: gruppo_proxy

volumes:
  traefik_data:
  app_data:
